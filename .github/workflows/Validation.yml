name: Validation

on:
  push

env:
  BUILD_TYPE: Release

# Jobs run in parallel by default
jobs:
  build_and_validate:
    name: Build and validate on ${{ matrix.config.name }}
  
    runs-on: ${{ matrix.config.os }}
    
    strategy:
      # Don't cancel all in-progress jobs if any matrix job fails:
      fail-fast: false
      # Define a matrix of job configurations:
      matrix:
        config:
        - {
            name: 'MacOS Latest',
            os: macos-latest,
            cmake_config_flags: "-G Xcode -D CMAKE_OSX_ARCHITECTURES=arm64\\;x86_64",
            cmake_build_flags: "-- CC=clang CPLUSPLUS=clang++ LD=clang LDPLUSPLUS=clang++"
          }
        - {
            name: 'Windows Latest',
            os: windows-latest,
          }

    # Steps run in sequence. Each step runs in its own process in the runner environment and has access to the workspace and filesystem
    # NB! Because steps run in their own process, changes to environment variables are not preserved between steps
    steps:
    
    - name: Checkout code 
      uses: actions/checkout@v2

    # Use the buildcache compiler cache to speed up the build
    # Note: currently we are not configuring buildcache to work on Windows
    # Details: https://github.com/mbitsnbites/buildcache/blob/master/doc/usage.md#using-with-visual-studio--msbuild
    - name: Enable buildcache
      if: runner.os != 'Windows'
      uses: mikehardy/buildcache-action@v1
      with:
        cache_key: ${{ runner.os }}-${{ env.BUILD_TYPE }}

    # NB! Using CMakeLists for the key doesn't entirely work when tracking a branch
    # - cache won't be updated even if the remote branch had new commit and we had to
    # fetch them.
    # We could use the commit hash to always update the cache,
    # or use the date hash to update it daily
    # We could also extract dependency versions from CMakeLists mote cleanly

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: Libs
        key: libs2-${{ runner.os }}-${{ hashFiles('CMakeLists.txt') }}
        restore-keys: libs2-${{ runner.os }}-

    - name: Configure CMake
      # Configure CMake in a 'Build' subdirectory.
      run: cmake -B Build ${{ matrix.config.cmake_config_flags }}

    - name: Build
      # Build the project with the given configuration
      run: cmake --build Build --config ${{ env.BUILD_TYPE }} ${{ matrix.config.cmake_build_flags }}
